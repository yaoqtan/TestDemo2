{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/qintao.yao/tman/TestDemo2/nextJS_project/next-create1/pages/signup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SignUpMutation($email: String!, $password: String!) {\\n    signUp(input: { email: $email, password: $password }) {\\n      user {\\n        id\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport Field from '../components/field';\nimport { getErrorMessage } from '../lib/form';\nimport { useRouter } from 'next/router';\nvar SignUpMutation = gql(_templateObject());\n\nfunction SignUp() {\n  _s();\n\n  var _useMutation = useMutation(SignUpMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      signUp = _useMutation2[0];\n\n  var _useState = useState(),\n      errorMsg = _useState[0],\n      setErrorMsg = _useState[1];\n\n  var router = useRouter();\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var emailElement, passwordElement;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              emailElement = event.currentTarget.elements.email;\n              passwordElement = event.currentTarget.elements.password;\n              _context.prev = 3;\n              _context.next = 6;\n              return signUp({\n                variables: {\n                  email: emailElement.value,\n                  password: passwordElement.value\n                }\n              });\n\n            case 6:\n              router.push('/signin');\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n              setErrorMsg(getErrorMessage(_context.t0));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 9]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, errorMsg && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }\n  }, errorMsg), __jsx(Field, {\n    name: \"email\",\n    type: \"email\",\n    autoComplete: \"email\",\n    required: true,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(Field, {\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"password\",\n    required: true,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Sign up\"), \" or\", ' ', __jsx(Link, {\n    href: \"signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Sign in\"))));\n}\n\n_s(SignUp, \"0uADkJ3HuJima3xZ/azzQtRj0cs=\", false, function () {\n  return [useMutation, useRouter];\n});\n\n_c = SignUp;\nexport default _c2 = withApollo(SignUp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/qintao.yao/tman/TestDemo2/nextJS_project/next-create1/pages/signup.js"],"names":["useState","Link","withApollo","gql","useMutation","Field","getErrorMessage","useRouter","SignUpMutation","SignUp","signUp","errorMsg","setErrorMsg","router","handleSubmit","event","preventDefault","emailElement","currentTarget","elements","email","passwordElement","password","variables","value","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,cAAc,GAAGL,GAAH,mBAApB;;AAWA,SAASM,MAAT,GAAkB;AAAA;;AAAA,qBACCL,WAAW,CAACI,cAAD,CADZ;AAAA;AAAA,MACTE,MADS;;AAAA,kBAEgBV,QAAQ,EAFxB;AAAA,MAETW,QAFS;AAAA,MAECC,WAFD;;AAGhB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AAHgB,WAKDO,YALC;AAAA;AAAA;;AAAA;AAAA,6EAKhB,iBAA4BC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,KAAK,CAACC,cAAN;AACMC,cAAAA,YAFR,GAEuBF,KAAK,CAACG,aAAN,CAAoBC,QAApB,CAA6BC,KAFpD;AAGQC,cAAAA,eAHR,GAG0BN,KAAK,CAACG,aAAN,CAAoBC,QAApB,CAA6BG,QAHvD;AAAA;AAAA;AAAA,qBAMUZ,MAAM,CAAC;AACXa,gBAAAA,SAAS,EAAE;AACTH,kBAAAA,KAAK,EAAEH,YAAY,CAACO,KADX;AAETF,kBAAAA,QAAQ,EAAED,eAAe,CAACG;AAFjB;AADA,eAAD,CANhB;;AAAA;AAaIX,cAAAA,MAAM,CAACY,IAAP,CAAY,SAAZ;AAbJ;AAAA;;AAAA;AAAA;AAAA;AAeIb,cAAAA,WAAW,CAACN,eAAe,aAAhB,CAAX;;AAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALgB;AAAA;AAAA;;AAwBhB,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,QAAJ,CADf,EAEE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,YAAY,EAAC,OAHf;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,YAAY,EAAC,UAHf;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAC,UALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,SAgB4C,GAhB5C,EAiBE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAjBF,CAFF,CADF;AA0BD;;GAlDQF,M;UACUL,W,EAEFG,S;;;KAHRE,M;AAoDT,qBAAeP,UAAU,CAACO,MAAD,CAAzB","sourcesContent":["import { useState } from 'react'\nimport Link from 'next/link'\nimport { withApollo } from '../apollo/client'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks'\nimport Field from '../components/field'\nimport { getErrorMessage } from '../lib/form'\nimport { useRouter } from 'next/router'\n\nconst SignUpMutation = gql`\n  mutation SignUpMutation($email: String!, $password: String!) {\n    signUp(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }\n`\n\nfunction SignUp() {\n  const [signUp] = useMutation(SignUpMutation)\n  const [errorMsg, setErrorMsg] = useState()\n  const router = useRouter()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const emailElement = event.currentTarget.elements.email\n    const passwordElement = event.currentTarget.elements.password\n\n    try {\n      await signUp({\n        variables: {\n          email: emailElement.value,\n          password: passwordElement.value,\n        },\n      })\n\n      router.push('/signin')\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error))\n    }\n  }\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSubmit}>\n        {errorMsg && <p>{errorMsg}</p>}\n        <Field\n          name=\"email\"\n          type=\"email\"\n          autoComplete=\"email\"\n          required\n          label=\"Email\"\n        />\n        <Field\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"password\"\n          required\n          label=\"Password\"\n        />\n        <button type=\"submit\">Sign up</button> or{' '}\n        <Link href=\"signin\">\n          <a>Sign in</a>\n        </Link>\n      </form>\n    </>\n  )\n}\n\nexport default withApollo(SignUp)\n"]},"metadata":{},"sourceType":"module"}