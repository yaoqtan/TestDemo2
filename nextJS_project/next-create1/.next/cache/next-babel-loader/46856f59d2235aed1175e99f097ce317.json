{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/qintao.yao/tman/TestDemo2/nextJS_project/next-create1/pages/signin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SignInMutation($email: String!, $password: String!) {\\n    signIn(input: { email: $email, password: $password }) {\\n      user {\\n        id\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport { useMutation, useApolloClient } from '@apollo/react-hooks';\nimport Field from '../components/field';\nimport { getErrorMessage } from '../lib/form';\nimport { useRouter } from 'next/router';\nvar SignInMutation = gql(_templateObject());\n\nfunction SignIn() {\n  _s();\n\n  var client = useApolloClient();\n\n  var _useMutation = useMutation(SignInMutation),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      signIn = _useMutation2[0];\n\n  var _useState = useState(),\n      errorMsg = _useState[0],\n      setErrorMsg = _useState[1];\n\n  var router = useRouter();\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var emailElement, passwordElement, _yield$signIn, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              emailElement = event.currentTarget.elements.email;\n              passwordElement = event.currentTarget.elements.password;\n              _context.prev = 3;\n              _context.next = 6;\n              return client.resetStore();\n\n            case 6:\n              _context.next = 8;\n              return signIn({\n                variables: {\n                  email: emailElement.value,\n                  password: passwordElement.value\n                }\n              });\n\n            case 8:\n              _yield$signIn = _context.sent;\n              data = _yield$signIn.data;\n\n              if (!data.signIn.user) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 13;\n              return router.push('/');\n\n            case 13:\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              setErrorMsg(getErrorMessage(_context.t0));\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 15]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, errorMsg && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  }, errorMsg), __jsx(Field, {\n    name: \"email\",\n    type: \"email\",\n    autoComplete: \"email\",\n    required: true,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(Field, {\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"password\",\n    required: true,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), \" or\", ' ', __jsx(Link, {\n    href: \"signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\n\n_s(SignIn, \"FynWOD0HC5UfSuP0Lynx7v4WKc4=\", false, function () {\n  return [useApolloClient, useMutation, useRouter];\n});\n\n_c = SignIn;\nexport default _c2 = withApollo(SignIn);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/qintao.yao/tman/TestDemo2/nextJS_project/next-create1/pages/signin.js"],"names":["useState","Link","withApollo","gql","useMutation","useApolloClient","Field","getErrorMessage","useRouter","SignInMutation","SignIn","client","signIn","errorMsg","setErrorMsg","router","handleSubmit","event","preventDefault","emailElement","currentTarget","elements","email","passwordElement","password","resetStore","variables","value","data","user","push"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Link from 'next/link'\nimport { withApollo } from '../apollo/client'\nimport gql from 'graphql-tag'\nimport { useMutation, useApolloClient } from '@apollo/react-hooks'\nimport Field from '../components/field'\nimport { getErrorMessage } from '../lib/form'\nimport { useRouter } from 'next/router'\n\nconst SignInMutation = gql`\n  mutation SignInMutation($email: String!, $password: String!) {\n    signIn(input: { email: $email, password: $password }) {\n      user {\n        id\n        email\n      }\n    }\n  }\n`\n\nfunction SignIn() {\n  const client = useApolloClient()\n  const [signIn] = useMutation(SignInMutation)\n  const [errorMsg, setErrorMsg] = useState()\n  const router = useRouter()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n\n    const emailElement = event.currentTarget.elements.email\n    const passwordElement = event.currentTarget.elements.password\n\n    try {\n      await client.resetStore()\n      const { data } = await signIn({\n        variables: {\n          email: emailElement.value,\n          password: passwordElement.value,\n        },\n      })\n      if (data.signIn.user) {\n        await router.push('/')\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error))\n    }\n  }\n\n  return (\n    <>\n      <h1>Sign In</h1>\n      <form onSubmit={handleSubmit}>\n        {errorMsg && <p>{errorMsg}</p>}\n        <Field\n          name=\"email\"\n          type=\"email\"\n          autoComplete=\"email\"\n          required\n          label=\"Email\"\n        />\n        <Field\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"password\"\n          required\n          label=\"Password\"\n        />\n        <button type=\"submit\">Sign in</button> or{' '}\n        <Link href=\"signup\">\n          <a>Sign up</a>\n        </Link>\n      </form>\n    </>\n  )\n}\n\nexport default withApollo(SignIn)\n"]},"metadata":{},"sourceType":"module"}